#!/usr/bin/env node

const parseArgs = require('minimist')

const argv = parseArgs(process.argv.slice(2), {
  alias: {
    p: 'profile', // config file
    i: 'icon',
    m: 'mode',
    f: 'filter',
    q: 'quality',
    c: 'color', // theme color
    h: 'help'
  },
  boolean: [ 'h' ],
  string: [
    'p', 'i', 'm', 'f', 'q', 'c',
    'landscape', // file; Cordova/Capacitor only
    'portrait', // file; Cordova/Capacitor only
    'splashscreen' // type; Cordova/Capacitor only
  ]
})

const { green } = require('chalk')

if (argv.help) {
  const modes = Object.keys(require('../lib/modes')).join('|')
  const generators = Object.keys(require('../lib/generators')).join('|')

  console.log(`
  Description
    Starts the app in development mode (hot-code reloading, error
    reporting, etc)

  Usage
    # generate icons for all installed Quasar modes
    $ icongenie generate -i /path/to/icon.png
    $ icongenie g -i /path/to/icon.png

    # generate for (as example) PWA mode only
    $ icongenie generate -m pwa --icon /path/to/icon.png

    # generate for (as example) Capacitor mode only
    $ icongenie g -m capacitor -i
         /path/to/icon.png --landscape /path/to/landscape.png
         --portrait /path/to/portrait.png

  Options
    --icon, -i          ${green('Required')};
                        Path to source file for icons; must be:
                          - a .png file
                          - min resolution: 64x64px (the higher the better!!)
                          - with transparency

    --landscape         Only ${green('required for Cordova/Capacitor mode')};
                        Path to landscape source file for splashscreens; must be:
                          - a .png file
                          - min resolution: 128x128px (the higher the better!!)
                          - width should be HIGHER than height
                          - transparency is optional

    --portrait          Only ${green('required for Cordova/Capacitor mode')};
                        Path to portrait source file for splashscreens; must be:
                          - a .png file
                          - min resolution: 128x128px (the higher the better!!)
                          - width should be LOWER than height
                          - transparency is optional

    --mode, -m          For which Quasar mode(s) to generate the assets;
                        Default: all
                          [all|${modes}]
                        Multiple can be specified, separated by ",":
                          spa,cordova

    --filter, -f        Filter the available generators; when used, it can
                        generate only one type of asset instead of all
                          [${generators}]

    --quality           Quality of the files [1 - 12] (default: 5)
                          - higher quality --> bigger filesize, slower
                          - lower quality  --> smaller filesize, faster

    --color, -c         Theme color (default: #1976D2) to use for the
                        monochrome SVGs, for some of the iOS icons and for
                        mobile splashscreens background.
                        The color must be in hex format (not hexa) and
                        so no transparency is allowed.

    --profile           Use a JSON config file with predefined parameters and
                        assets list. Any parameters specified along this one
                        in the terminal will override the config file's settings.
                        Structure of the file:
                          {
                            params: { /* parameter_name: parameter_value */ },
                            assets: [ /* list of assets */ ]
                          }

    --help, -h          Displays this message

    Only for Cordova/Capacitor mode:

    --splashscreen      Splashscreens build strategy: (default is "pure")
                          pure    => Doesn't adds bg color or overlaps the icon
                          bg      => Generate with background color and icon
                          overlay => Overlay the icon source file centered on top of
                                     the splashscreen source file
  `)
  process.exit(0)
}

const generate = require('../lib/cmd/generate')

generate(argv).then(numberOfFiles => {
  console.log(`\n Done - generated ${numberOfFiles} file(s)!\n`)
})
